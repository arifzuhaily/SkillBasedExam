#include <stdio.h>
#include <stdlib.h>
#include <arpa/inet.h>
#include <unistd.h> // Include this header for the close function

#define SERVER_IP "192.168.145.128"
#define SERVER_PORT 8888

int main() {
    int client_socket;
    struct sockaddr_in server_addr;

    // Create a socket
    client_socket = socket(AF_INET, SOCK_STREAM, 0);
    if (client_socket == -1) {
        perror("Error: socket creation failed");
        exit(EXIT_FAILURE);
    }

    // Set server address
    server_addr.sin_family = AF_INET;
    server_addr.sin_port = htons(SERVER_PORT);
    if (inet_pton(AF_INET, SERVER_IP, &server_addr.sin_addr) <= 0) {
        perror("Error: invalid address");
        close(client_socket);
        exit(EXIT_FAILURE);
    }

    // Connect to the server
    if (connect(client_socket, (struct sockaddr*)&server_addr, sizeof(server_addr)) == -1) {
        perror("Error: connection failed");
        close(client_socket);
        exit(EXIT_FAILURE);
    }

    printf("Connected to server at %s:%d\n", SERVER_IP, SERVER_PORT);

    // Receive the random number from the server
    int random_number;
    ssize_t bytes_received = recv(client_socket, &random_number, sizeof(random_number), 0);
    if (bytes_received == -1) {
        perror("Error: failed to receive data");
        close(client_socket);
        exit(EXIT_FAILURE);
    }

    // Display the random number received from the server
    printf("Received random number from server: %d\n", random_number);

    // Close the socket
    close(client_socket);

    return 0;
}
